version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: gamecraft-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: gamecraft
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - gamecraft-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: gamecraft-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - gamecraft-network

  # Backend Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: gamecraft-server
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/gamecraft?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: gamecraft-dev-secret-key-2024
      CLIENT_URL: http://localhost:3000
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
    volumes:
      - ./server:/app
      - /app/node_modules
      - ./uploads:/app/uploads
    depends_on:
      - mongodb
      - redis
    networks:
      - gamecraft-network

  # Frontend Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: gamecraft-client
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
      REACT_APP_SOCKET_URL: http://localhost:5000
      CHOKIDAR_USEPOLLING: true
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server
    networks:
      - gamecraft-network

  # Nginx Reverse Proxy (Optional for production-like setup)
  nginx:
    image: nginx:alpine
    container_name: gamecraft-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - client
      - server
    networks:
      - gamecraft-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  gamecraft-network:
    driver: bridge